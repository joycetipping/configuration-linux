#!/usr/bin/perl

use Getopt::Long qw(:config no_ignore_case);

# Options
my $l = 1;  # Light background; default true
my $d = 0;  # Dark background; default false
my $term = 1;  # Parse into gnome-term format; default true
my $hex =  0;  # Parse into hexadecimal format; default false

my $result = GetOptions (
  "l" => \$l, 
  "d" => \$d,
  "term" => \$term,
  "hex"  => \$hex
);

# If our -d option is true, set our -l option to false, since they are mutually exclusive.
if ($d) { $l = 0; }
# If our --hex option is true, set our --term option to false, since they are mutually exclusive.
if ($hex) { $term = 0; }

# Debugging options
#print ("l is $l\nd is $d\nterm is $term\nhex is $hex\n");

open my $colors, '<', $ARGV[0] || die "Error: No file specified.\n";
my $file = join "", <$colors>;
my @darks = ($file =~ m/dark: (...)/g);
my @lights= ($file =~ m/light: (...)/g);

my $sep = ":";
if ($term) {
  map s/(.)(.)(.)/#\1\1\1\1\2\2\2\2\3\3\3\3/, @darks;
  map s/(.)(.)(.)/#\1\1\1\1\2\2\2\2\3\3\3\3/, @lights;
} elsif ($hex) {
  map s/(.)(.)(.)/#\1\1\2\2\3\3/, @darks;
  map s/(.)(.)(.)/#\1\1\2\2\3\3/, @lights;
  $sep = ",";
}

if ($l) { print join $sep, @darks, @lights; }       # If the background is light, print the light colors first, then the dark colors.
elsif ($d) { print join $sep, @lights, @darks; }    # If the background is dark, print the dark colors first, then the light colors.
